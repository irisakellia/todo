{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\projects\\\\2pros\\\\todolist\\\\frontend\\\\src\\\\components\\\\TodoWrapper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useFffect, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport EditTodoForm from './EditTodoForm'; // Import EditTodoForm component\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoWrapper = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const tasks = await axios.get('http://localhost:4000/tasks');\n      const response = tasks.data;\n      console.log(response);\n      setData(response.tasks);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleDeleteTask = async id => {\n    try {\n      const confirm = prompt(\"Are you sure you want to delete this task\");\n      if (confirm) {\n        const deleteTask = await axios.deleteTask(`http://localhost:3000/delete/${id}`);\n        if (deleteTask) {\n          window.location.href = '/task';\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // const toggleComplete = id => {\n  //   setTodos(\n  //     todos.map(todo => \n  //       todo.id === id ? { ...todo, completed: !todo.completed } : todo\n  //     )\n  //   );\n  // };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Get Things Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoWrapper, \"rUmPOfbscbHGc9JPzEO4HMxkeng=\");\n_c = TodoWrapper;\nexport default TodoWrapper;\nvar _c;\n$RefreshReg$(_c, \"TodoWrapper\");","map":{"version":3,"names":["React","useState","useFffect","useEffect","TodoForm","Todo","EditTodoForm","axios","jsxDEV","_jsxDEV","TodoWrapper","_s","data","setData","fetchData","tasks","get","response","console","log","error","handleDeleteTask","id","confirm","prompt","deleteTask","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/projects/2pros/todolist/frontend/src/components/TodoWrapper.js"],"sourcesContent":["import React, { useState , useFffect, useEffect} from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\nimport EditTodoForm from './EditTodoForm'; // Import EditTodoForm component\r\nimport axios from 'axios'\r\n\r\n\r\nconst TodoWrapper = () => {\r\n \r\n  const [data, setData] = useState([ ]);\r\n\r\n  useEffect(()=>{\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async ()=>{\r\n    try {\r\n\r\n      const tasks = await axios.get('http://localhost:4000/tasks')\r\n      const response = tasks.data;\r\n      console.log(response);\r\n      setData(response.tasks);\r\n      \r\n    } catch (error) {\r\n      console.log(error);\r\n      \r\n    }\r\n  }\r\n\r\n  const handleDeleteTask = async (id)=>{\r\n    try {\r\n      const confirm = prompt(\"Are you sure you want to delete this task\");\r\n      if (confirm){\r\n        const  deleteTask = await axios.deleteTask(`http://localhost:3000/delete/${id}`);\r\n\r\n        if(deleteTask){\r\n\r\n          window.location.href = '/task';\r\n\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      \r\n    }\r\n  }\r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\n \r\n  // const toggleComplete = id => {\r\n  //   setTodos(\r\n  //     todos.map(todo => \r\n  //       todo.id === id ? { ...todo, completed: !todo.completed } : todo\r\n  //     )\r\n  //   );\r\n  // };\r\n  return (\r\n    <div className='TodoWrapper'>\r\n      <h1>Get Things Done</h1>\r\n      <TodoForm  />\r\n      \r\n          <Todo />\r\n            \r\n          \r\n           \r\n         \r\n        \r\n\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default TodoWrapper;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAGC,SAAS,EAAEC,SAAS,QAAO,OAAO;AAC7D,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,YAAY,MAAM,gBAAgB,CAAC,CAAC;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGzB,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAExB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAG,CAAC;EAErCE,SAAS,CAAC,MAAI;IACZW,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAU;IAC1B,IAAI;MAEF,MAAMC,KAAK,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,6BAA6B,CAAC;MAC5D,MAAMC,QAAQ,GAAGF,KAAK,CAACH,IAAI;MAC3BM,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrBJ,OAAO,CAACI,QAAQ,CAACF,KAAK,CAAC;IAEzB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IAEpB;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAOC,EAAE,IAAG;IACnC,IAAI;MACF,MAAMC,OAAO,GAAGC,MAAM,CAAC,2CAA2C,CAAC;MACnE,IAAID,OAAO,EAAC;QACV,MAAOE,UAAU,GAAG,MAAMlB,KAAK,CAACkB,UAAU,CAAE,gCAA+BH,EAAG,EAAC,CAAC;QAEhF,IAAGG,UAAU,EAAC;UAEZC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,OAAO;QAEhC;MACF;IACF,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IAEpB;EACF,CAAC;;EAWD;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACEX,OAAA;IAAKoB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BrB,OAAA;MAAAqB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBzB,OAAA,CAACL,QAAQ;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAETzB,OAAA,CAACJ,IAAI;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAOT,CAAC;AAEV,CAAC;AAACvB,EAAA,CAtEID,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AAyEjB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}