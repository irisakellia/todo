{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\projects\\\\todolist\\\\src\\\\components\\\\TodoWrapper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport EditTodoForm from './EditTodoForm'; // Import EditTodoForm component\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoWrapper = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    const savedTodos = localStorage.getItem('todos');\n    if (savedTodos) {\n      setTodos(JSON.parse(savedTodos));\n    }\n  }, []);\n\n  // Save todos to localStorage whenever todos change\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n  const addTodo = todo => {\n    setTodos([...todos, {\n      id: uuidv4(),\n      task: todo,\n      completed: false,\n      isEditing: false\n    }]);\n  };\n  const toggleComplete = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo));\n  };\n  const deleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n  const editTodo = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      isEditing: !todo.isEditing\n    } : todo));\n  };\n  const editTask = (task, id) => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      task,\n      isEditing: !todo.isEditing\n    } : todo));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Get Things Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), todos.map(todo => todo.isEditing ? /*#__PURE__*/_jsxDEV(EditTodoForm, {\n      editTodo: editTask,\n      task: todo\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Todo, {\n      task: todo,\n      toggleComplete: () => toggleComplete(todo.id),\n      deleteTodo: () => deleteTodo(todo.id),\n      editTodo: () => editTodo(todo.id)\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoWrapper, \"JPZTns5sUK6f8sNf0ff2EvpSbn0=\");\n_c = TodoWrapper;\nexport default TodoWrapper;\nvar _c;\n$RefreshReg$(_c, \"TodoWrapper\");","map":{"version":3,"names":["React","useState","useEffect","TodoForm","Todo","EditTodoForm","v4","uuidv4","jsxDEV","_jsxDEV","TodoWrapper","_s","todos","setTodos","savedTodos","localStorage","getItem","JSON","parse","setItem","stringify","addTodo","todo","id","task","completed","isEditing","toggleComplete","map","deleteTodo","filter","editTodo","editTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/projects/todolist/src/components/TodoWrapper.js"],"sourcesContent":["import React, { useState ,useEffect } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\nimport EditTodoForm from './EditTodoForm'; // Import EditTodoForm component\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst TodoWrapper = () => {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const savedTodos = localStorage.getItem('todos');\r\n    if (savedTodos) {\r\n      setTodos(JSON.parse(savedTodos));\r\n    }\r\n  }, []);\r\n\r\n  // Save todos to localStorage whenever todos change\r\n  useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  const addTodo = todo => {\r\n    setTodos([\r\n      ...todos,\r\n      {\r\n        id: uuidv4(),\r\n        task: todo,\r\n        completed: false,\r\n        isEditing: false\r\n      }\r\n    ]);\r\n  };\r\n\r\n  const toggleComplete = id => {\r\n    setTodos(\r\n      todos.map(todo => \r\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo\r\n      )\r\n    );\r\n  };\r\n\r\n  const deleteTodo = id => {\r\n    setTodos(todos.filter(todo => todo.id !== id));\r\n  };\r\n\r\n  const editTodo = id => {\r\n    setTodos(\r\n      todos.map(todo =>\r\n        todo.id === id ? { ...todo, isEditing: !todo.isEditing } : todo\r\n      )\r\n    );\r\n  };\r\n\r\n  const editTask = (task, id) => {\r\n    setTodos(\r\n      todos.map(todo => \r\n        todo.id === id ? { ...todo, task, isEditing: !todo.isEditing } : todo\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className='TodoWrapper'>\r\n      <h1>Get Things Done</h1>\r\n      <TodoForm addTodo={addTodo} />\r\n      {todos.map(todo =>\r\n        todo.isEditing ? (\r\n          <EditTodoForm key={todo.id} editTodo={editTask} task={todo} />\r\n        ) : (\r\n          <Todo\r\n            key={todo.id}\r\n            task={todo}\r\n            toggleComplete={() => toggleComplete(todo.id)}\r\n            deleteTodo={() => deleteTodo(todo.id)}\r\n            editTodo={() => editTodo(todo.id)}\r\n          />\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoWrapper;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}